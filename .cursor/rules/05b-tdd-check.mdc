---
description: 
globs: 
alwaysApply: false
---
# ✅ 品質チェック・段階的実装

## 段階的実装フェーズ

### Phase 1: 基盤構築（必須完了）
- [ ] プロジェクト初期化
- [ ] TypeScript strict + ESLint設定
- [ ] ビルド成功
- [ ] 基本的なディレクトリ構造

### Phase 2: 品質向上（段階的実施可）
- [ ] テスト環境構築
- [ ] TDD実装開始
- [ ] 基本的なテストケース作成
- [ ] カバレッジ > 50%

### Phase 3: 最適化（継続的改善）
- [ ] カバレッジ > 80%
- [ ] パフォーマンス最適化
- [ ] アクセシビリティ完全準拠
- [ ] UI/UX向上

## チェックリスト

### 開始前チェック（P0）
- [ ] package.json確認完了
- [ ] deepwiki mcpでバージョン情報取得（利用不可時は手動確認）
- [ ] ディレクトリ構成確認
- [ ] 既存コンポーネント確認

### 実装中チェック（P0-P1）
- [ ] TDDサイクル実行中（環境問題時は代替戦略）
- [ ] TypeScript strictモード準拠
- [ ] ESLintエラー0件維持
- [ ] セマンティックHTML使用
- [ ] TailwindCSS + cn関数使用
- [ ] **react-scan確認**: 開発環境でのレンダリング監視（基本設定のみ）**deepwikiで実装確認**
- [ ] **テストファイル作成時**: 必要なimport・mock設定完了（[06-testing.mdc](mdc:.cursor/rules/06-testing.mdc) 準拠）
- [ ] **Context使用時**: test-utils.tsx でのラップ確認
- [ ] **ブラウザAPI使用時**: setup.ts でのmock設定確認

### 完了前チェック（段階的達成）

#### 最小限品質（Phase 1）
- [ ] `pnpm lint` エラー0件
- [ ] `pnpm build` 成功
- [ ] TypeScript型エラー0件

#### 標準品質（Phase 2）
- [ ] テスト実行可能
- [ ] 基本的なテストケース
- [ ] カバレッジ > 50%

#### 高品質（Phase 3）
- [ ] テストカバレッジ > 80%
- [ ] パフォーマンス基準達成
- [ ] **react-scan最適化**: 不要レンダリング0件達成
- [ ] アクセシビリティ確認

## 品質基準（段階的達成）

### 最小限品質（Phase 1完了時）
- ESLintエラー: 0件
- ビルドエラー: 0件
- TypeScript型エラー: 0件

### 標準品質（Phase 2完了時）
- テスト実行可能
- 基本的なテストケース作成
- カバレッジ > 50%

### 高品質（Phase 3継続改善）
- カバレッジ > 80%
- パフォーマンス基準達成
- アクセシビリティ完全準拠

## 生産性向上

### 並列実行推奨
- 複数ファイル読み込み: 並列tool call
- 独立した操作: 同時実行
- 読み取り専用コマンド: 並列実行

### 効率化原則
- **最小限実装**: 必要最小限の機能から開始
- **段階的改善**: 動作確認後に機能追加
- **継続的検証**: 各段階で品質チェック
- **早期フィードバック**: 問題の早期発見・修正
- **現実的目標**: 完璧主義より継続的改善