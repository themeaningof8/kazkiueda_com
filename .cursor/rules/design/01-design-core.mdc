---
description: 
globs: 
alwaysApply: false
---
# AIエージェント向けUI設計実行ルール

## 実行指針
**あなたはUI設計において、美的好みではなく認知科学的根拠に基づいて判断・実行する。主観的判断を排除し、科学的エビデンスに基づく設計決定のみを行う。**

成果物を生成した後、このルールを改めて参照し厳しいレビューを行う。

---

## 1. 必須実行ルール（例外なし）

### 構造・認知負荷管理
- **同時表示要素を5個以内に制限する**（ミラーの法則：人間の短期記憶限界）
- **選択肢を2-7個以内に制限する**（ヒックの法則：選択時間最適化）
- **重要ボタンを44px×44px以上で作成する**（フィッツの法則：操作精度確保）
- **0.1秒以内の直接操作フィードバックを実装する**（オペラント条件付け）

### スペーシングシステム
- **8の倍数でスペーシングを設定する**：8px, 16px, 24px, 32px, 48px, 64px
- **細部調整時のみ4pxと12pxを使用する**（8の約数として）
- **グリッドシステムも8の倍数で構築する**

### 一貫性確保
- **同じ機能は同じ位置・見た目で統一する**（ヤコブの法則）
- **業界標準パターンを採用する**（既存メンタルモデル活用）
- **システム全体で統一したデザインパターンを使用する**

---

## 2. レイアウト実行ルール

### 視線誘導パターンの選択と実装
**以下のパターンから適切なものを選択し、厳密に適用する：**

#### Z型パターン（シンプルなコンテンツ）
```
左上（開始点）→ 右上（重要情報）→ 左下（補助情報）→ 右下（CTA）
```

#### F型パターン（テキスト重要コンテンツ）
```
上部横（見出し）→ 左縦（本文開始）→ 中間横（小見出し）→ 右下（CTA）
```

#### グーテンベルク図（均等情報配置）
```
左上（主要）→ 対角線流れ → 右下（終着点）
```

### 視覚階層の構築
- **重要度に応じてサイズ・色・位置を差別化する**
- **関連要素を近接配置する**（ゲシュタルト近接性）
- **同種要素を同じ視覚処理で統一する**（ゲシュタルト類似性）
- **重要要素を周囲と明確に差別化する**（対比性）

---

## 3. 技術実装ルール

### 基盤技術の使用
- **shadcn/uiコンポーネントを優先使用する**（認知科学的最適化済み）
- **Tailwind CSSでスタイリングを行う**
- **カスタムコンポーネント作成時も上記ルールに準拠する**

### デザイントークン適用
[index.css](mdc:src/index.css) に準拠

### レスポンシブ設計
[index.css](mdc:src/index.css) に準拠

---

## 4. 実行時判断フロー

### Step 1: タスク分析
1. ユーザーの認知負荷を評価する
2. 必要な同時表示要素数を数える（5個以内に制限）
3. 選択肢の数を確認する（2-7個に制限）

### Step 2: レイアウトパターン選択
1. コンテンツタイプを判定する
   - シンプル → Z型パターン
   - テキスト重要 → F型パターン
   - 均等情報 → グーテンベルク図
2. 選択したパターンに従って要素を配置する

### Step 3: 技術実装
1. shadcn/uiコンポーネントから適切なものを選択する
2. 8の倍数スペーシングシステムを適用する
3. デザイントークンを使用してスタイリングする
4. 必須フィードバック速度を実装する

### Step 4: 品質チェック
必須チェック項目：
- [ ] 同時表示要素が5個以内
- [ ] 重要ボタンが44px以上
- [ ] 8の倍数スペーシング使用
- [ ] 選択した視線誘導パターンに準拠
- [ ] 0.1秒以内フィードバック実装
- [ ] 一貫性確保

---

## 5. 具体的行動指示

### UIコンポーネント作成時
1. 機能を分析し、認知負荷を評価する
2. shadcn/uiから基盤コンポーネントを選択する
3. 8の倍数スペーシングで配置する
4. 選択した視線誘導パターンに従って要素を配置する
5. 必須チェック項目を確認する
6. 実装コードを生成する

### レイアウト設計時
1. コンテンツタイプからパターンを決定する
2. グリッドシステム（8の倍数）を適用する
3. 視覚階層を構築する（重要度に応じた差別化）
4. 関連要素を近接配置する
5. 読みやすさ設定を適用する（行間1.5、65ch幅）

### インタラクション設計時
1. 0.1秒以内の直接操作フィードバックを実装する
2. 1.0秒以内でシステム処理反応を設定する
3. 適切なトランジション時間を選択する
4. 業界標準パターンに従う

---

## 6. 例外処理ルール

### 絶対例外不可（物理的制約）
- 同時表示要素5個制限
- 重要ボタン44px制限
- システム内一貫性
- 直接操作フィードバック速度

### 理由付き例外可能
- メニュー項目7個制限（階層化で対応可能な場合）
- 業界標準パターン（より優れた代替案がある場合）

### 例外申請時の行動
1. 科学的根拠を提示する
2. 代替案を複数提案する
3. 効果測定方法を明示する
4. 承認後は効果を継続監視する

---

## 7. エラー回避指示

### 絶対に行わない行動
- **主観的な「美しさ」による判断**
- **科学的根拠のない設計決定**
- **認知負荷無視した情報詰め込み**
- **一貫性を無視したデザイン変更**
- **業界標準無視した独自パターン作成**

### 必ず行う確認
- **Laws of UX準拠チェック**
- **8の倍数スペーシング確認**
- **視線誘導パターン適用確認**
- **認知負荷評価実施**
- **アクセシビリティ基準確認**

---

## 8. 実行品質保証

### 毎回の実行で確認する項目
1. 認知科学的根拠に基づく判断を行ったか
2. 必須実行ルールを全て適用したか
3. 適切な技術スタックを使用したか
4. 品質チェック項目を全て確認したか
5. 例外処理ルールに従ったか

### 継続的改善指示
- **新しい科学的知見を積極的に学習・適用する**
- **実装効果を測定・分析する**
- **ルール改善提案を継続的に行う**

---

**このルールに従って、常に認知科学的根拠に基づく最適なUI設計を実行せよ。主観的判断は排除し、測定可能な品質向上を目指せ。**